/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2022-04-05 07:03:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class find_005fpw_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/CatProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/cat/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/CatProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/cat/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1648472838000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"utf-8\" />\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n");
      out.write("        <meta name=\"description\" content=\"\" />\r\n");
      out.write("        <meta name=\"author\" content=\"\" />\r\n");
      out.write("        <title>3차 프로젝트 1조</title>\r\n");
      out.write("        <link rel=\"icon\" type=\"image/x-icon\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/favicon.ico\" />\r\n");
      out.write("        <!-- Font Awesome icons (free version)-->\r\n");
      out.write("        <script src=\"https://use.fontawesome.com/releases/v5.15.4/js/all.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("        <!-- Google fonts-->\r\n");
      out.write("        <link href=\"https://fonts.googleapis.com/css?family=Raleway:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i\" rel=\"stylesheet\" />\r\n");
      out.write("        <link href=\"https://fonts.googleapis.com/css?family=Lora:400,400i,700,700i\" rel=\"stylesheet\" />\r\n");
      out.write("        <!-- Core theme CSS (includes Bootstrap)-->\r\n");
      out.write("        <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/styles.css\" rel=\"stylesheet\" />\r\n");
      out.write("         <script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("        <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("        <script type=\"text/javascript\">\r\n");
      out.write("			//전송(submit)버튼이 눌러졌을 때, 입력값들에 대한 유효성 검사함\r\n");
      out.write("			function validate(){\r\n");
      out.write("				\r\n");
      out.write("				//validation 체크 검사 코드 구현함\r\n");
      out.write("				//서버 컨트롤러로 전송할 값들이 유효한 값인지 검사하는 것\r\n");
      out.write("				//암호와 암호확인이 같은 값인지 확인\r\n");
      out.write("				var pwdValue = document.getElementById(\"user_pwd\").value;\r\n");
      out.write("				var pwdValue2 = document.getElementById(\"user_pwd2\").value;\r\n");
      out.write("				var message = \"\";\r\n");
      out.write("				\r\n");
      out.write("				if(pwdValue !== pwdValue2){\r\n");
      out.write("					//alert(\"비밀번호와 비밀번호 확인의 값이 일치하지 않습니다.\\n다시 입력하세요.\");\r\n");
      out.write("					//document.getElementById(\"user_pwd\").select();\r\n");
      out.write("					message += '<h5 style=\"color:red;\" id=\"result_check\">비밀번호가 일치하지 않습니다.</h5>'\r\n");
      out.write("					document.getElementById(\"result_check\").innerHTML = message;\r\n");
      out.write("					\r\n");
      out.write("					return false;  //전송 취소\r\n");
      out.write("				}else{\r\n");
      out.write("					return true;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		</script>\r\n");
      out.write("		\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("    	");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		");
      if (_jspx_meth_c_005fimport_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        <section class=\"page-section cta\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div class=\"col-xl-9 mx-auto\">\r\n");
      out.write("                        <div class=\"cta-inner bg-faded text-center rounded\">\r\n");
      out.write("                        	\r\n");
      out.write("                        	<!-- 태그 원하는 위치 삽입 참조 position(top,left,right,bottom)이용 ,이미지 사지즈는 반응형 웹 구조 때문에 px보다는 %선호-->\r\n");
      out.write("                        	<img style=\"display:inline; position:absolute; top:30px; left:30px;\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.servletContext.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/static/img/img2.png\" width=20%; height=16%;>\r\n");
      out.write("                            \r\n");
      out.write("                            <br><br>\r\n");
      out.write("                            <h2 class=\"section-heading mb-5\">\r\n");
      out.write("	                        	<span style=\"display:inline;\" class=\"section-heading-lower\">비밀번호 찾기</span>\r\n");
      out.write("                            </h2>\r\n");
      out.write("                            <h5 align=\"center\">(* 표시는 필수입력 항목입니다.)</h5>\r\n");
      out.write("                            <ul class=\"list-unstyled list-hours mb-5 text-left mx-auto\">\r\n");
      out.write("                            	<h5 align=\"left\">*아이디</h5>\r\n");
      out.write("                                <li class=\"list-unstyled-item list-hours-item d-flex\">\r\n");
      out.write("                                <form action=\"findPwd.do\" method=\"post\" onsubmit=\"return validate();\">\r\n");
      out.write("		                            <div class=\"input-group\">\r\n");
      out.write("		                                <input class=\"form-control\" style=\"display:inline;\" id=\"user_id\" type=\"text\" placeholder=\"아이디\" name=\"user_id\" required>\r\n");
      out.write("		                            </div>   \r\n");
      out.write("                                </li>                                                \r\n");
      out.write("                                <h5 align=\"left\">*새 비밀번호</h5>\r\n");
      out.write("                                <li class=\"list-unstyled-item list-hours-item d-flex\">\r\n");
      out.write("                                   <div class=\"input-group\">\r\n");
      out.write("                                        <input class=\"form-control\" id=\"user_pwd\" type=\"password\" placeholder=\"비밀번호 입력\" name=\"user_pwd\" required>\r\n");
      out.write("                                   </div>\r\n");
      out.write("                                </li>                                \r\n");
      out.write("                                <h5 align=\"left\">*새 비밀번호 확인</h5>\r\n");
      out.write("                                <li class=\"list-unstyled-item list-hours-item d-flex\">\r\n");
      out.write("                                   <div class=\"input-group\">\r\n");
      out.write("		                                <input class=\"form-control\" id=\"user_pwd2\" type=\"password\" placeholder=\"비밀번호 확인\" required>\r\n");
      out.write("		                           </div>\r\n");
      out.write("                                </li>                                \r\n");
      out.write("                                <h5 align=\"left\">*이름</h5>\r\n");
      out.write("                                <li class=\"list-unstyled-item list-hours-item d-flex\">\r\n");
      out.write("                                  <div class=\"input-group\">\r\n");
      out.write("		                                <input class=\"form-control\" id=\"user_name\" name=\"user_name\" placeholder=\"이름 입력\" required>\r\n");
      out.write("		                           </div>\r\n");
      out.write("                                </li>                                \r\n");
      out.write("                                <h5 align=\"left\">*생년월일</h5>\r\n");
      out.write("                                <li class=\"list-unstyled-item list-hours-item d-flex\">\r\n");
      out.write("                                  <div class=\"input-group\">\r\n");
      out.write("		                                <input class=\"form-control\" id=\"user_birth\" type=\"date\" placeholder=\"yyyy-mm-dd (반드시 형식에 맞게 입력하세요)\" name=\"user_birth\" required>\r\n");
      out.write("		                           </div>\r\n");
      out.write("                                </li>\r\n");
      out.write("                                <h5 align=\"left\">*당신이 좋아하는 고양이의 품종은?</h5>\r\n");
      out.write("                                <li class=\"list-unstyled-item list-hours-item d-flex\">\r\n");
      out.write("                                   <div class=\"input-group\">\r\n");
      out.write("		                                <input class=\"form-control\" id=\"keyword\" placeholder=\"고양이 품종 입력(비밀번호 찾기 키워드)\" name=\"keyword\" required>\r\n");
      out.write("		                           </div>\r\n");
      out.write("                                </li>                  \r\n");
      out.write("                                <h5 id=\"result_check\"></h5>              \r\n");
      out.write("                                <div class=\"form-floating mb-3\">\r\n");
      out.write("                                	<input class=\"btn btn-primary btn-block\" type=\"submit\" value=\"비밀번호 변경\">\r\n");
      out.write("                                	<input class=\"btn btn-primary btn-block\" type=\"button\" onclick=\"javascript:history.go(-1); return false;\" value=\"이전 페이지로\">\r\n");
      out.write("                                   <!-- <button type=\"submit\" class=\"btn btn-primary btn-block\">회원가입</button>\r\n");
      out.write("                                   <button type=\"reset\" class=\"btn btn-primary btn-block\">작성취소</button> -->\r\n");
      out.write("                                   \r\n");
      out.write("		                        </div>\r\n");
      out.write("                               \r\n");
      out.write("                            </ul>\r\n");
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("        \r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /WEB-INF/views/member/find_pw.jsp(49,5) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("/WEB-INF/views/common/loginSession.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f1 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f1_reused = false;
    try {
      _jspx_th_c_005fimport_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f1.setParent(null);
      // /WEB-INF/views/member/find_pw.jsp(50,2) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f1.setUrl("/WEB-INF/views/common/menubar.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f1 = _jspx_th_c_005fimport_005f1.doStartTag();
        if (_jspx_th_c_005fimport_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f1);
      _jspx_th_c_005fimport_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f1_reused);
    }
    return false;
  }
}
